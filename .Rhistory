library(Rchoice)
library(corrplot)
library(ggplot2)
library(RColorBrewer)
library(ggpubr)
library(psych)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data1<-read.csv2("datasets/rating_dataset_perceived_choices.csv", header=T,dec=".",sep=",") # this is the perceived safery dataset
setwd("C:/Users/panos/Desktop/github_tzouras/Perceived_safety_choices")
#setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data1<-read.csv2("datasets/rating_dataset_perceived_choices.csv", header=T,dec=".",sep=",") # this is the perceived safery dataset
socio<-read.csv2("datasets/socio_dataset_perceived_choices.csv", header=T,dec=".",sep=",") # this socio-demographic dataset
# 1. Descriptive statistics
summary(as.factor(socio$gender)) # it is balanced, male and female approx 50 - 50
summary(as.factor(socio$age)) # young young people...
# we need here a new variable...
summary(as.factor(socio$young)) # so 91 young people
summary(as.factor(socio$income)) # income, employment and education are not factors of psafe
summary(as.factor(socio$employment)) # so skip this variable
summary(as.factor(socio$education))
# 4. Analysis of variance
summary(aov(data1$psafe~factor(data1$cycle_own) + factor(data1$tmode))) # cycle ownership is not a factor of perceived safety in general
# of course the mode of transport is a significant factor
summary(as.factor(subset(socio, cycle_own==1)$bike_frequency)) # they do not feel and they do not use their bicycles.
# 4. Analysis of variance
summary(aov(data1$psafe~factor(data1$cycle_own) + factor(data1$tmode))) # cycle ownership is not a factor of perceived safety in general
# 4. Analysis of variance
summary(aov(data1$psafe~factor(data1$cycle_own) + factor(data1$gender) + factor(data1$young)
+ factor(data1$tmode))) # cycle ownership is not a factor of perceived safety in general
# 4. Analysis of variance
summary(aov(data1$psafe~factor(data1$cycle_own) + factor(data1$gender) + factor(data1$young)
+ factor(data1$tmode) + factor(data1$education) + factor(data1$income))) # cycle ownership is not a factor of perceived safety in general
hist_psafe <- function(df){ # function to plot bars, plot the responces.
p<-ggplot(df, aes(x=as.factor(psafe), fill = tmode)) +
geom_bar() +
geom_text(aes(label = ..count..), stat = "count", size = 3,
position = position_stack(vjust = 0.5)) +
scale_y_continuous(name ="Number of responces") +
scale_x_discrete(name ="Perceived Safety") +
scale_fill_brewer(palette = 'Set1', name = "Transport Mode",
labels = c("Car", "E-Bike", "E-Scooter", "Walk")) + theme_bw()
return(p)}
ggarrange(hist_psafe(subset(data1, gender == 0)) + ggtitle('Females'),
hist_psafe(subset(data1, gender == 1)) + ggtitle('Males'),
common.legend = TRUE, legend = 'bottom') # so here, we can see different distribution, which is super interesting
ggarrange(hist_psafe_100(subset(data1, cycle_own == 0)) + ggtitle('No bicycle owners'),
hist_psafe_100(subset(data1, cycle_own == 1)) + ggtitle('Bicycle owners'),
common.legend = TRUE, legend = 'bottom', ncol = 2) # only noticeable differences is how they perceive safety of esooters
hist_psafe_100 <- function(df){
p<-ggplot(df, aes(fill = factor(tmode), x = factor(psafe))) +
geom_bar(position = "fill") +
scale_fill_brewer(palette = 'Set1', name = "Transport Mode",
labels = c("Car", "E-Bike", "E-Scooter", "Walk")) +
geom_text(aes(label = scales::percent(..count../tapply(..count.., ..x.. ,sum)[..x..], accuracy = 0.1)),
position = position_fill(vjust = 0.5),
stat = "count") + theme_bw() +
scale_x_discrete(name ="Perceived Safety") +
scale_y_continuous(name ="Percentage of responces (%)",
labels = function(x) paste0(x*100, "%"))
return(p)}
ggarrange(hist_psafe_100(subset(data1, cycle_own == 0)) + ggtitle('No bicycle owners'),
hist_psafe_100(subset(data1, cycle_own == 1)) + ggtitle('Bicycle owners'),
common.legend = TRUE, legend = 'bottom', ncol = 2) # only noticeable differences is how they perceive safety of esooters
# ok now lets check all the sociodemographic variables:
summary(aov(data1$psafe ~ data1$gender + data1$education + data1$employment + data1$income + data1$car_own +
data1$cycle_own + data1$bike_frequency + data1$escooter_frequency + data1$young)) # car_ownership is factor, but I have only five
# histograms: psafe vs mode vs infrastructure type
ggarrange(hist_psafe(subset(data1, type==1)) + ggtitle('Type 1: Sidewalk < 1.5 m wide'),
hist_psafe(subset(data1, type==2)) + ggtitle('Type 2: Sidewalk > 1.5 m wide'),
hist_psafe(subset(data1, type==3)) + ggtitle('Type 3: With cycle lane'),
hist_psafe(subset(data1, type==4)) + ggtitle('Type 4: Shared space'),
ncol=2, nrow=2, common.legend = TRUE, legend = 'bottom') # ok this is super super, and gives clear results...in the dillemma to share or not...
# 6. Impact of traffic flow conditions
hist_veh_volume <- function(df){
p<-ggplot(df, aes(fill = factor(psafe), x = factor(veh))) +
geom_bar(stat = "count", position = "fill") +
scale_fill_brewer(palette = 'RdYlBu', name = "Perceived Safety",
labels = c('1: very unsafe', '2', '3', '4: moderate', '5', '6', '7: very safe')) +
# geom_text(aes(label = scales::percent(..count../tapply(..count.., ..x.. ,sum)[..x..], accuracy = 0.1)),
#           position = position_fill(vjust = 0.5),
#          stat = "count") + theme_bw() +
scale_x_discrete(name ="Vehicle density (veh/km)", labels = c('20', '60', '100')) +
scale_y_continuous(name ="Percentage of responces (%)",
labels = function(x) paste0(x*100, "%")) + coord_flip() + theme_bw()
return(p)}
hist_bike_volume <- function(df){
p<-ggplot(df, aes(fill = factor(psafe), x = factor(bike))) +
geom_bar(stat = "count", position = "fill") +
scale_fill_brewer(palette = 'RdYlBu', name = "Perceived Safety",
labels = c('1: very unsafe', '2', '3', '4: moderate', '5', '6', '7: very safe')) +
#geom_text(aes(label = scales::percent(..count../tapply(..count.., ..x.. ,sum)[..x..], accuracy = 0.1)),
#          position = position_fill(vjust = 0.5),
#          stat = "count")
scale_x_discrete(name ="Bike density (bikes/km)", labels = c('10', '50', '90')) +
scale_y_continuous(name ="Percentage of responces (%)",
labels = function(x) paste0(x*100, "%")) + coord_flip() + theme_bw()
return(p)}
hist_ped_volume <- function(df){
p<-ggplot(df, aes(fill = factor(psafe), x = factor(ped))) +
geom_bar(stat = "count", position = "fill") +
scale_fill_brewer(palette = 'RdYlBu', name = "Perceived Safety",
labels = c('1: very unsafe', '2', '3', '4: moderate', '5', '6', '7: very safe')) +
#geom_text(aes(label = scales::percent(..count../tapply(..count.., ..x.. ,sum)[..x..], accuracy = 0.1)),
#          position = position_fill(vjust = 0.5),
#            stat = "count")
scale_x_discrete(name ="Number of pedestrians (peds)", labels = c('5', '15', '25')) +
scale_y_continuous(name ="Percentage of responces (%)",
labels = function(x) paste0(x*100, "%")) + coord_flip() + theme_bw()
return(p)}
ggarrange(hist_veh_volume(subset(data1, tmode=='car')),
hist_bike_volume(subset(data1, tmode=='car')),
hist_ped_volume(subset(data1, tmode=='car')),
hist_veh_volume(subset(data1, tmode=='ebike')),
hist_bike_volume(subset(data1, tmode=='ebike')),
hist_ped_volume(subset(data1, tmode=='ebike')),
hist_veh_volume(subset(data1, tmode=='escoot')),
hist_bike_volume(subset(data1, tmode=='escoot')),
hist_ped_volume(subset(data1, tmode=='escoot')),
hist_veh_volume(subset(data1, tmode=='walk')),
hist_bike_volume(subset(data1, tmode=='walk')),
hist_ped_volume(subset(data1, tmode=='walk')),
nrow = 4, ncol = 3, common.legend = TRUE, legend = 'bottom') # general, general
# 3. correlations - VALENTINA
# check correlations for rating dataset
df = subset(subset(data1, tmode=="car"), select = c(type, pav, obst, cross, veh, bike, ped, young, gender))
M = cor(df)
testRes=cor.mtest(df, conf.level=0.05) # display only significant correlations
corrplot(M, p.mat = testRes$p, sig.level = 0.05, method = 'number', diag=FALSE)
ggarrange(hist_veh_volume(subset(data1, tmode=='car')),
hist_bike_volume(subset(data1, tmode=='car')),
hist_ped_volume(subset(data1, tmode=='car')),
hist_veh_volume(subset(data1, tmode=='ebike')),
hist_bike_volume(subset(data1, tmode=='ebike')),
hist_ped_volume(subset(data1, tmode=='ebike')),
hist_veh_volume(subset(data1, tmode=='escoot')),
hist_bike_volume(subset(data1, tmode=='escoot')),
hist_ped_volume(subset(data1, tmode=='escoot')),
hist_veh_volume(subset(data1, tmode=='walk')),
hist_bike_volume(subset(data1, tmode=='walk')),
hist_ped_volume(subset(data1, tmode=='walk')),
nrow = 4, ncol = 3, common.legend = TRUE, legend = 'bottom') # general, general
# histograms: psafe vs mode vs gender (3 dimmensions of psafe)
ggarrange(hist_psafe(subset(data1, gender == 0)) + ggtitle('Females'),
hist_psafe(subset(data1, gender == 1)) + ggtitle('Males'),
common.legend = TRUE, legend = 'bottom') # so here, we can see different distribution, which is super interesting
hist_psafe_100 <- function(df){
p<-ggplot(df, aes(fill = factor(tmode), x = factor(psafe))) +
geom_bar(position = "fill") +
scale_fill_brewer(palette = 'Set1', name = "Transport Mode",
labels = c("Car", "E-Bike", "E-Scooter", "Walk")) +
geom_text(aes(label = scales::percent(..count../tapply(..count.., ..x.. ,sum)[..x..], accuracy = 0.1)),
position = position_fill(vjust = 0.5),
stat = "count") + theme_bw() +
scale_x_discrete(name ="Perceived Safety") +
scale_y_continuous(name ="Percentage of responces (%)",
labels = function(x) paste0(x*100, "%"))
return(p)}
# histograms: psafe vs mode vs age group
ggarrange(hist_psafe_100(subset(data1, young == 1)) + ggtitle('Age < 30 years old'),
hist_psafe_100(subset(data1, young == 0)) + ggtitle('Age >= 30 years old'),
common.legend = TRUE, legend = 'bottom', ncol = 2) # only noticeable differences is how not young perceive safety of esooters
ggarrange(hist_veh_volume(subset(data1, tmode=='car')),
hist_bike_volume(subset(data1, tmode=='car')),
hist_ped_volume(subset(data1, tmode=='car')),
hist_veh_volume(subset(data1, tmode=='ebike')),
hist_bike_volume(subset(data1, tmode=='ebike')),
hist_ped_volume(subset(data1, tmode=='ebike')),
hist_veh_volume(subset(data1, tmode=='escoot')),
hist_bike_volume(subset(data1, tmode=='escoot')),
hist_ped_volume(subset(data1, tmode=='escoot')),
hist_veh_volume(subset(data1, tmode=='walk')),
hist_bike_volume(subset(data1, tmode=='walk')),
hist_ped_volume(subset(data1, tmode=='walk')),
nrow = 4, ncol = 3, common.legend = TRUE, legend = 'bottom') # general, general
# 4. Simple ordered logit models
data1$psafe<-as.ordered(data1$psafe)
model_car<-Rchoice(formula =  psafe ~ type1 + type2 + type3 + cross1 + cross2 + pav + obst + veh + ped,
data = subset(data1, tmode=='car'),
family = ordinal("logit"), panel=FALSE, method="bfgs") # estimate ordinal logit model, select y and xs
summary(model_car) # print model results
View(model_car)
model_car[["coefficients"]]
x<-model_car[["coefficients"]]
x
y<-data.frame(case=x)
View(y)
model_car[["Std. Error"]]
model_car<-Rchoice(formula =  psafe ~ type1 + type2 + type4 + cross1 + cross2 + pav + obst + veh + ped,
data = subset(data1, tmode=='car'),
family = ordinal("logit"), panel=FALSE, method="bfgs") # estimate ordinal logit model, select y and xs
summary(model_car) # print model results
model_ebike<-Rchoice(formula = psafe ~ type1 + type2 + type4 + cross1 + cross2 + pav + obst + veh + bike + ped,
data=subset(data1,tmode=='ebike'),
family=ordinal("logit"), panel=FALSE, method="bfgs") # estimate ordinal logit model, select y and xs
summary(model_ebike) # print model results
model_escoot<-Rchoice(formula = psafe ~ type1 + type2 + type4  + cross1 + cross2 + pav + obst + veh + bike + ped,
data=subset(data1,tmode=='escoot'),
family=ordinal("logit"), panel=FALSE, method="bfgs") # estimate ordinal logit model, select y and xs
summary(model_escoot) # print model results
model_walk<-Rchoice(formula = psafe ~ type1 + type2 + type4 + cross1 + cross2 + pav + obst + veh + bike + ped,
data=subset(data1, tmode=='walk'),
family=ordinal("logit"), panel=FALSE, method="bfgs") # estimate ordinal logit model, select y and xs
summary(model_walk) # print model results
sp_models<-data.frame(car=model_car[["coefficients"]], model_ebike[["coefficients"]])
sp_models<-data.frame(car=model_car[["coefficients"]], ebike = model_ebike[["coefficients"]])
sp_models<-data.frame(car=model_car[["coefficients"]])
sp_models<-cbind(sp_models, data.frame(ebike=model_ebike[["coefficients"]]))
View(sp_models)
sp_model2<-data.frame(ebike=model_ebike[["coefficients"]])
View(sp_model2)
model_car<-Rchoice(formula =  psafe ~ type1 + type2 + type4 + cross1 + cross2 + pav + obst + veh + bike + ped,
data = subset(data1, tmode=='car'),
family = ordinal("logit"), panel=FALSE, method="bfgs") # estimate ordinal logit model, select y and xs
summary(model_car) # print model results
model_ebike<-Rchoice(formula = psafe ~ type1 + type2 + type4 + cross1 + cross2 + pav + obst + veh + bike + ped,
data=subset(data1,tmode=='ebike'),
family=ordinal("logit"), panel=FALSE, method="bfgs") # estimate ordinal logit model, select y and xs
summary(model_ebike) # print model results
model_escoot<-Rchoice(formula = psafe ~ type1 + type2 + type4  + cross1 + cross2 + pav + obst + veh + bike + ped,
data=subset(data1,tmode=='escoot'),
family=ordinal("logit"), panel=FALSE, method="bfgs") # estimate ordinal logit model, select y and xs
summary(model_escoot) # print model results
model_walk<-Rchoice(formula = psafe ~ type1 + type2 + type4 + cross1 + cross2 + pav + obst + veh + bike + ped,
data=subset(data1, tmode=='walk'),
family=ordinal("logit"), panel=FALSE, method="bfgs") # estimate ordinal logit model, select y and xs
summary(model_walk) # print model results
sp_models<-data.frame(car=model_car[["coefficients"]], ebike=model_ebike[["coefficients"]])
View(sp_models)
sp_models<-data.frame(car = model_car[["coefficients"]], ebike = model_ebike[["coefficients"]],
escoot = model_escoot[["coefficients"]], walk = model_walk[["coefficients"]])
sp_models<-data.frame(car = model_car[["coefficients"]], ebike = model_ebike[["coefficients"]],
escoot = model_escoot[["coefficients"]], walk = model_walk[["coefficients"]])
write.csv(sp_models,"psafe_models/outputs/simple_psafe_models.csv", row.names = FALSE)
write.csv(sp_models,"psafe_models/outputs/simple_psafe_models.csv")
data1$psafe<-as.ordered(data1$psafe)
model_car_TRB<-Rchoice(formula = psafe ~ gender + young + type1 + type2 + type4 + pav + cross1 + cross2 + obst + veh + bike + ped,
data = subset(data1, tmode=='car'),
ranp=c(type1="n", type2 = "n", type4 = "n", veh = "n", bike = "n", ped="n"), haltons=NA,
family=ordinal("logit"), index='pid',
panel=TRUE, R=2000, print.init = TRUE)
summary(model_car_TRB)
model_ebike_TRB<-Rchoice(formula = psafe ~ gender + young + type1 + type2 + type4 + pav + cross1 + cross2 + obst + veh + bike + ped,
data = subset(data1, tmode=='ebike'),
ranp=c(type1="n", type2 = "n", type4 = "n", veh = "n", bike = "n", ped="n"), haltons=NA,
family=ordinal("logit"), index='pid',
panel=TRUE, R=2000, print.init = TRUE)
summary(model_ebike_TRB)
model_escoot_TRB<-Rchoice(formula = psafe ~ gender + young + type1 + type2 + type4 + pav + cross1 + cross2 + obst + veh + bike + ped,
data = subset(data1, tmode=='escoot'),
ranp=c(type1="n", type2 = "n", type4 = "n", veh = "n", bike = "n", ped="n"), haltons=NA,
family=ordinal("logit"), index='pid',
panel=TRUE, R=2000, print.init = TRUE)
summary(model_escoot_TRB)
model_walk_TRB<-Rchoice(formula = psafe ~ gender + young + type1 + type2 + type4 + pav + cross1 + cross2 + obst + veh + bike + ped,
data = subset(data1, tmode=='walk'),
ranp=c(type1="n", type2 = "n", type4 = "n", veh = "n", bike = "n", ped="n"), haltons=NA,
family=ordinal("logit"), index='pid',
panel=TRUE, R=2000, print.init = TRUE)
summary(model_walk_TRB)
trb_models<-data.frame(car = model_car_TRB[["coefficients"]], ebike = model_ebike_TRB[["coefficients"]],
escoot = model_escoot_TRB[["coefficients"]], walk = model_walk_TRB[["coefficients"]])
write.csv(trb_models,"psafe_models/outputs/trb_psafe_models.csv") # save coefficients, keep the insignificant too
